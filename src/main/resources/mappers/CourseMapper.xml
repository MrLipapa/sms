<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.sms.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.sms.vo.Course" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="is_vaild" property="isVaild" jdbcType="INTEGER" />
    <result column="creat_date" property="creatDate" jdbcType="TIMESTAMP" />
    <result column="uodate_date" property="uodateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, course_name, teacher_id, class_id, begin_time, end_time, time, is_vaild, creat_date, 
    uodate_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.sms.vo.Course" >
    insert into t_course (id, course_name, teacher_id, 
      class_id, begin_time, end_time, 
      time, is_vaild, creat_date, 
      uodate_date)
    values (#{id,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{time,jdbcType=TIMESTAMP}, #{isVaild,jdbcType=INTEGER}, #{creatDate,jdbcType=TIMESTAMP}, 
      #{uodateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.sms.vo.Course" >
    insert into t_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="isVaild != null" >
        is_vaild,
      </if>
      <if test="creatDate != null" >
        creat_date,
      </if>
      <if test="uodateDate != null" >
        uodate_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="isVaild != null" >
        #{isVaild,jdbcType=INTEGER},
      </if>
      <if test="creatDate != null" >
        #{creatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uodateDate != null" >
        #{uodateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.sms.vo.Course" >
    update t_course
    <set >
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="isVaild != null" >
        is_vaild = #{isVaild,jdbcType=INTEGER},
      </if>
      <if test="creatDate != null" >
        creat_date = #{creatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="uodateDate != null" >
        uodate_date = #{uodateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.sms.vo.Course" >
    update t_course
    set course_name = #{courseName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      begin_time = #{beginTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=TIMESTAMP},
      is_vaild = #{isVaild,jdbcType=INTEGER},
      creat_date = #{creatDate,jdbcType=TIMESTAMP},
      uodate_date = #{uodateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByParams" parameterType="com.xxxx.sms.query.CourseQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    t_course
    <where>
      is_vaild=1
      <if test="null !=id and id != ''">
        and id = #{id}
      </if>
      <if test="null !=courseName and courseName != ''">
        and course_name like concat('%',#{courseName},'%')
      </if>
      <if test="null !=classId and classId != ''">
        and class_id = #{classId}
      </if>
    </where>
  </select>
  <select id="queryCourseByParams" resultType="com.xxxx.sms.vo.Course"></select>

  <!-- （批量）删除操作 -->
  <update id="deleteBatch">
    update
    t_course
    set
    is_vaild = 0
    where
    id in
    <foreach collection="array" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </update>


</mapper>