<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.sms.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.sms.vo.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_remark" jdbcType="VARCHAR" property="roleRemark" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_remark, is_valid, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.sms.vo.Role">
    insert into t_role (id, role_name, role_remark,
      is_valid, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleRemark,jdbcType=VARCHAR},
      #{isValid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.sms.vo.Role">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleRemark != null">
        role_remark,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.sms.vo.Role">
    update t_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleRemark != null">
        role_remark = #{roleRemark,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.sms.vo.Role">
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_remark = #{roleRemark,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--&lt;!&ndash;//查询所有角色数据&ndash;&gt;
  <select id="queryAllRoles" parameterType="com.xxxx.sms.query.RoleQuery" resultType="com.xxxx.sms.vo.Role">
    select *
    from t_role
    <where>
      is_valid = 1
      <if test="null !=roleName and roleName !=''">
        and role_name =#{roleName}
      </if>
    </where>
  </select>-->

  <!--多条件分页查询角色信息-->
  <select id="queryRoleByParams" parameterType="com.xxxx.sms.query.RoleQuery" resultType="com.xxxx.sms.vo.Role">
    select <include refid="Base_Column_List" />
    from t_role
    <where>
      is_valid=1
      <if test="null !=roleName and roleName !=''">
        and role_name =#{roleName}
      </if>
    </where>
  </select>

  <!--//通过前台传过来的角色名查询数据库   queryRoleByRoleName-->
  <select id="queryRoleByRoleName" parameterType="String" resultType="com.xxxx.sms.vo.Role">
    select *
    from t_role
    where role_name = #{roleName}
  </select>

</mapper>