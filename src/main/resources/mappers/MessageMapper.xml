<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.sms.dao.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.sms.vo.Message" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="target_id" property="targetId" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, target_id, source_id, message, is_read, read_count, is_valid, create_date, update_date, 
    class_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.sms.vo.Message" >
    insert into t_message (id, target_id, source_id, 
      message, is_read, read_count, 
      is_valid, create_date, update_date, 
      class_id)
    values (#{id,jdbcType=INTEGER}, #{targetId,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, 
      #{message,jdbcType=VARCHAR}, #{isRead,jdbcType=INTEGER}, #{readCount,jdbcType=INTEGER}, 
      #{isValid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{classId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.sms.vo.Message" >
    insert into t_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="targetId != null" >
        target_id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="targetId != null" >
        #{targetId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.sms.vo.Message" >
    update t_message
    <set >
      <if test="targetId != null" >
        target_id = #{targetId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.sms.vo.Message" >
    update t_message
    set target_id = #{targetId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--多条件分页查询数据-->
  <select id="queryByParams" parameterType="com.xxxx.sms.query.MessageQuery" resultType="Message">
    select
        m.*,u.user_name as userName,c.class_name as className
    from
        t_message m
    left join t_user u on m.target_id = u.id
    left join t_class c on m.class_id = c.id
    <where>
        m.is_valid = 1
        <if test="userName != null and userName != ''">
          and  u.user_name like concat("%",#{userName},"%")
        </if>
        <if test="className != null and className != ''">
          and  c.class_name like concat("%",#{className},"%")
        </if>
    </where>
  </select>

  <!--批量删除-->
  <update id="deleteBatch" >
    UPDATE t_message
    SET is_valid = 0
    WHERE
	    id
	IN
	<foreach collection="array" open="(" close=")" item="id" separator=",">
      #{id}
    </foreach>
  </update>

  <!--根据备注id查询班级名-->
  <select id="queryClassName" resultType="String" parameterType="int">
    select class_name
    from t_class
    where id=#{id}
  </select>

  <!--查询所有班级信息-->
  <select id="queryAllClass" resultType="map">
    select id as id,class_name as className
    from t_class
    where is_valid=1
  </select>

  <!--根据目标对象名称 查找目标对象id-->
  <select id="queryTargetId" resultType="int" parameterType="String">
    select id
    from t_user
    where user_name=#{userName}
  </select>


</mapper>